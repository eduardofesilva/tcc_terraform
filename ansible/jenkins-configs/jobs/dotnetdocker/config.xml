<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.29">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.60">
    <script>pipeline{
    agent {label &apos;ec2&apos;}
    stages{
        stage(&apos;Checkout&apos;)
        {
            steps{
                git credentialsId: &apos;github&apos;, url: &apos;git@github.com:dotnet/dotnet-docker.git&apos;
            }
        }
        stage(&apos;Build&apos;)
        {
            steps{
                dir(&apos;./samples/dotnetapp&apos;) {
                    sh &apos;docker build --pull -t dotnetapp:alpine -f Dockerfile.alpine-x64 .&apos;
                }
            }
        }
        stage(&apos;Test&apos;)
        {
            steps{
                dir(&apos;./samples/dotnetapp&apos;) {
                    sh &apos;docker build --pull --target testrunner -t dotnetapp:test -f Dockerfile.alpine-x64 .&apos;
                }
            }
        }
        stage(&apos;Publish&apos;)
        {
            steps{
                    withCredentials([usernamePassword(credentialsId: &apos;docker_credentials&apos;, passwordVariable: &apos;PASS&apos;, usernameVariable: &apos;USER&apos;)]) {
                        sh &apos;docker login -u ${USER} -p ${PASS}&apos;
                        sh &apos;docker tag dotnetapp:alpine eduardofesilva/dotnetapp_tcc:latest&apos;
                        sh &apos;docker push eduardofesilva/dotnetapp_tcc:latest&apos;
                    }
            }
        }
    }
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
